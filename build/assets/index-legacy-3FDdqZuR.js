!function(){function t(t,i){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);i&&(e=e.filter((function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable}))),s.push.apply(s,e)}return s}function i(t,i,s){return(i=function(t){var i=function(t,i){if("object"!=typeof t||!t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var e=s.call(t,i||"default");if("object"!=typeof e)return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===i?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(i))in t?Object.defineProperty(t,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[i]=s,t}System.register([],(function(s,e){"use strict";return{execute:function(){var s=document.createElement("style");s.textContent='@font-face{font-display:swap;font-family:Roboto;font-weight:300;src:local("Roboto-Thin"),url(/assets/Roboto-Thin-DDdiHTKW.woff2) format("woff2"),url(/assets/Roboto-Thin-yBOxysKD.woff) format("woff")}@font-face{font-display:swap;font-family:Roboto;font-weight:400;src:local("Roboto-Regular"),url(/assets/Roboto-Regular-DfUCb2mm.woff2) format("woff2"),url(/assets/Roboto-Regular-JBFcY4UA.woff) format("woff")}@font-face{font-display:swap;font-family:Roboto;font-weight:600;src:local("Roboto-Medium"),url(/assets/Roboto-Medium-DZIsnF0f.woff2) format("woff2"),url(/assets/Roboto-Medium-B-K1eRfL.woff) format("woff")}@font-face{font-display:swap;font-family:Roboto;font-weight:900;src:local("Roboto-Bold"),url(/assets/Roboto-Bold-c7ioyAuF.woff2) format("woff2"),url(/assets/Roboto-Bold-DixNzvt0.woff) format("woff")}*{font-family:Roboto,sans-serif;font-weight:400}*{margin:0;padding:0}body,html{background:#666;height:100%;width:100%}#whiteboard{background-color:#fff;cursor:crosshair;touch-action:none}\n/*$vite$:1*/',document.head.appendChild(s);const e={x:0,y:0};class o{constructor(t){i(this,"canvas",void 0),i(this,"ctx",void 0),i(this,"mode","idle"),i(this,"hasMoved",!1),i(this,"panStart",e),i(this,"offset",e),i(this,"lastOffset",e),i(this,"strokes",[]),i(this,"currentStroke",null),i(this,"scale",1),i(this,"lastScale",1),i(this,"pinchStartDist",0),i(this,"pinchStartMid",e),i(this,"pinchStartOffset",e),i(this,"gestureInitialDist",0),i(this,"gestureInitialMid",e),i(this,"gestureThreshold",10),this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d"),this.setupCanvas(),this.setupEventListeners()}setupCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.ctx.strokeStyle="#000000",this.ctx.lineWidth=3,this.ctx.lineCap="round",this.ctx.lineJoin="round"}setupEventListeners(){this.canvas.addEventListener("mousedown",this.startDrawing.bind(this)),this.canvas.addEventListener("mousemove",this.draw.bind(this)),this.canvas.addEventListener("mouseup",this.stopDrawing.bind(this)),this.canvas.addEventListener("mouseout",this.stopDrawing.bind(this)),this.canvas.addEventListener("touchstart",this.handleTouchStart.bind(this)),this.canvas.addEventListener("touchmove",this.handleTouchMove.bind(this)),this.canvas.addEventListener("touchend",this.handleTouchEnd.bind(this)),this.canvas.addEventListener("touchcancel",this.handleTouchEnd.bind(this))}handleTouchStart(t){2===t.touches.length?(this.mode="pending",this.gestureInitialDist=this.getPinchDistance(t),this.gestureInitialMid=this.getAverageCoordinates(t)):1===t.touches.length&&this.startDrawing(t)}handleTouchMove(t){if(2===t.touches.length)if("pending"===this.mode){const i=this.getPinchDistance(t),s=this.getAverageCoordinates(t),e=Math.abs(i-this.gestureInitialDist),o=Math.hypot(s.x-this.gestureInitialMid.x,s.y-this.gestureInitialMid.y);e>this.gestureThreshold?this.startZooming(t):o>this.gestureThreshold&&this.startPanning(t)}else"zooming"===this.mode?this.continueZooming(t):"panning"===this.mode&&this.continuePanning(t);else"drawing"===this.mode&&1===t.touches.length&&this.draw(t)}handleTouchEnd(t){("zooming"===this.mode||"panning"===this.mode)&&t.touches.length<2?("zooming"===this.mode&&this.stopZooming(),"panning"===this.mode&&this.stopPanning()):"drawing"===this.mode&&0===t.touches.length&&this.stopDrawing()}startZooming(s){"drawing"===this.mode&&this.cutoffDrawing(),this.mode="zooming",this.pinchStartDist=this.getPinchDistance(s),this.lastScale=this.scale,this.pinchStartMid=this.getAverageCoordinates(s),this.pinchStartOffset=function(s){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?t(Object(o),!0).forEach((function(t){i(s,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(s,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(t){Object.defineProperty(s,t,Object.getOwnPropertyDescriptor(o,t))}))}return s}({},this.offset)}continueZooming(t){const i=this.getPinchDistance(t);if(0===this.pinchStartDist)return;let s=this.lastScale*(i/this.pinchStartDist);s=Math.max(.2,Math.min(s,5));const e=this.getAverageCoordinates(t),o=(e.x-this.pinchStartMid.x)/this.scale,n=(e.y-this.pinchStartMid.y)/this.scale,h=s/this.lastScale;this.offset={x:this.pinchStartOffset.x+o-(this.pinchStartMid.x-this.pinchStartOffset.x)*(h-1),y:this.pinchStartOffset.y+n-(this.pinchStartMid.y-this.pinchStartOffset.y)*(h-1)},this.scale=s,this.redraw()}stopZooming(){this.mode="idle",this.pinchStartDist=0}startPanning(t){"drawing"===this.mode&&this.cutoffDrawing(),this.mode="panning",this.panStart=this.getAverageCoordinates(t),this.lastOffset=this.offset}continuePanning(t){const i=this.getAverageCoordinates(t);this.offset={x:this.lastOffset.x+(i.x-this.panStart.x),y:this.lastOffset.y+(i.y-this.panStart.y)},this.redraw()}stopPanning(){this.mode="idle",this.panStart={x:0,y:0}}startDrawing(t){if("idle"!==this.mode)return;this.mode="drawing",this.hasMoved=!1;const i=this.getCoordinates(t);this.currentStroke={points:[i],color:this.ctx.strokeStyle,width:this.ctx.lineWidth}}draw(t){var i;if("drawing"!==this.mode)return;this.hasMoved=!0;const s=this.getCoordinates(t);null===(i=this.currentStroke)||void 0===i||i.points.push(s),this.redraw()}stopDrawing(){"drawing"===this.mode&&(this.currentStroke&&(this.strokes.push(this.currentStroke),this.currentStroke=null),this.redraw(),this.mode="idle")}getCoordinates(t){const i=this.canvas.getBoundingClientRect(),s=t instanceof MouseEvent?t:t.touches[0]||t.changedTouches[0];return{x:(s.clientX-i.left-this.offset.x)/this.scale,y:(s.clientY-i.top-this.offset.y)/this.scale}}getAverageCoordinates(t){return{x:(t.touches[0].clientX+t.touches[1].clientX)/2,y:(t.touches[0].clientY+t.touches[1].clientY)/2}}getPinchDistance(t){const i=t.touches[0].clientX-t.touches[1].clientX,s=t.touches[0].clientY-t.touches[1].clientY;return Math.sqrt(i*i+s*s)}cutoffDrawing(){"drawing"===this.mode&&(this.hasMoved?this.stopDrawing():(this.currentStroke=null,this.redraw()))}redraw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.save(),this.ctx.translate(this.offset.x,this.offset.y),this.ctx.scale(this.scale,this.scale),this.drawStrokes(),this.ctx.restore()}drawStrokes(){const t=this.currentStroke?this.strokes.concat([this.currentStroke]):this.strokes;for(const i of t)this.ctx.strokeStyle=i.color,this.ctx.lineWidth=i.width,this.ctx.beginPath(),this.ctx.moveTo(i.points[0].x,i.points[0].y),i.points.forEach((t=>this.ctx.lineTo(t.x,t.y))),this.ctx.stroke()}}document.addEventListener("DOMContentLoaded",(()=>{new o("whiteboard")}))}}}))}();
